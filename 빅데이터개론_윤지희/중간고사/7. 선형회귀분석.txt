1. 상관분석 : 변수들이 서로 얼마나 밀접하게 직선적인 관계를 가지고 있는지를 분석하는 통계적 기법

 ================================================================================================


2. 회귀분석 : 한 개 또는 그 이상의 변수들(반응변수 또는 종속변수)에 대하여 다른 한 변수(설명변수 또는 독립변수) 사이의 관계를 수학적인 모형을 이용하여 설명하고 예측하는 분석 기법
 
쉽게 말하자면, 상관분석에서는 산점도의 점들의 분포를 통해 일정한 패턴을 확인한 후, 상관계수를 구하여 두 변수 간의 선형관계를 알 수 있었다. 
더 나아가 이 일정한 패턴을 활용하여 무엇인가를 예측하는 분석을 회귀분석이라고 보면 된다.

===========================================================================================


3.단순 선형 회귀
lm(formula = [Y ~ X + ... ], data = [ ] )
formula : 반응변수(Y) ~ 설명변수(X1 + X2 + ...) 의 형태로 지정한 식
data : 변수가 포함된 데이터 프레임

# youtube(설명변수))에 따른 sales(반응변수)의 관계


========================================================================

결정계수(coefficient of determination)

1 회귀직선의 적합성 측정계수

2 잔차와 결정계수

	잔차의 변동이 0에 가까워지면

(1) 결정계수는 1에 가까워짐

(2) "실제 데이터에 대한 회귀직선의 적합성이 좋다"

(3) 회귀직선의 유용성이 높아짐

	잔차의 변동이 커지게 되면

(1) 결정계수는 0에 가까워짐

(2) "실제 데이터에 대한 회귀직선의 적합성이 나쁘다"

(3) 회귀직선의 유용성이 낮아짐

===========================================================

=============================================================
summary(m1) 의 결과 = 


# Residuals = 잔차 -> 잔차가 작아지면 결정계수는 커진다 -> 결정계수 클수록 회귀직선의 적합성이 좋은것임. -> 설명잘할수있다.
# intercept = 절편
# intercept밑에 = 기울기
# R-squared => 결정계수 (높을수록 좋다)

β0 = 8.439112, β1 = 0.047537 으로부터 sales = 8.439112(절편) + 0.047537(기울기) * youtube
따라서 yotube가 1 증가할때마다 sales는 0.047537 만큼 증가한다

==============================================================


coef(m1)[1]#절편
coef(m1)[2]#기울기
# ggplot2
# 절편과 기울기로 회귀선을 만들어준다. 


m1 <- lm(formula = sales ~ youtube, data = marketing)

# facebook(설명변수))에 따른 sales(반응변수)의 관계
m2 <- lm(formula = sales ~ facebook, data = marketing)

# newspaper(설명변수))에 따른 sales(반응변수)의 관계
m3 <- lm(formula = sales ~ newspaper, data = marketing)



marketing %>% ggplot(aes(x = youtube, y = sales)) + 
 	geom_point(color = "tomato") +
 	geom_abline(intercept = coef(m1)[1], slope = coef(m1)[2], color = "green", size = 1.5)

marketing %>% ggplot(aes(x = facebook, y = sales)) + 
 	geom_point(color = "blue") +
 	geom_abline(intercept = coef(m2)[1], slope = coef(m2)[2], color = "green", size = 1.5)

marketing %>% ggplot(aes(x = newspaper, y = sales)) + 
 	geom_point(color = "black") +
 	geom_abline(intercept = coef(m3)[1], slope = coef(m3)[2], color = "green", size = 1.5)

================================================================

**stat_smooth(method = 'lm')을 이용한 방법**=> 더 쉬운방법



marketing %>% ggplot(aes(x = youtube, y = sales)) + 
 geom_point(color = "tomato") +
 stat_smooth(method = 'lm', color = "green")

marketing %>% ggplot(aes(x = facebook, y = sales)) + 
 geom_point(color = "blue") +
 stat_smooth(method = 'lm', se = F, color = "green")

 marketing %>% ggplot(aes(x = newspaper, y = sales)) + 
 geom_point(color = "black") +
 stat_smooth(method = 'lm', se = F, color = "green")


====================================================

잔차구하기 

ggPredict(m1,xpos=0.75,vjust=1.5, show.error = TRUE)
