a = [1,2,3,4,5]
##a[-1] 하면 맨 마지막 원소 나옴

a[-1] = 5 

===================================

 a = [1,2,3,4,5,6,7,8,9,10]

>>> a[0:5]##5바로 전까지 됨

[1, 2, 3, 4, 5]

====================================

a[5:]##5번째부터 마지막까지 원소 나옴
[6, 7, 8, 9, 10]

====================================

 a[:3]##0번부터 3번째 전까지 원소값 나옴
[1, 2, 3]

========================================

b = [5,6,7]
>>> a = [1,2,3,4]

>>> a+b		##합의 개념이 아니라 배열합하는 의미
[1, 2, 3, 4, 5, 6, 7]

===========================================
###a[2]를 30으로 대체

a= [1,2,3,4,5]
>>> a[2] = 30
>>> a
[1, 2, 30, 4, 5]

============================================
##만들어진 함수로 리스트의 길이를 측정

a = [1, 2, 30, 4, 5]
>>> len(a)
5

===========================================
##a 끝에 값을 추가하고 싶을경우
##append 이용
##insert 와 append차이점은 insert는 원하는 위치,append 는 맨뒤에추가

a = [1, 2, 30, 4, 5]
a.append(4)
>>> a
[1, 2, 30, 4, 5, 4]

==========================================
##리스트 2개를 합산하고싶을때 a+b연산 사용해도 똑같음
##extend 이용
a = [1,2,3,4]
a.extend([5,6,7])
>>> a
[1, 2, 3, 4, 5, 6, 7]

====================================================
##a의 원하는 위치에 원하는 값 삽입
##insert 이용
a = [2,4,5]
>>> a.insert(0,1)
>>> a
[1, 2, 4, 5]
>>> a.insert(2,3)
>>> a
[1, 2, 3, 4, 5]

====================================================
##remove는 지정해서 지우는거고 pop 은 마지막꺼 제거

a = ['BMW','BENZ','volk','AUDI']
a.remove('BENZ')

## a = ['BMW', 'volk', 'AUDI'] 됨

=============================================
##pop이용 제거 1번 -> 마지막원소 제거
##원하는 위치 제거하고싶으면 a.pop(1) 하면 2번째원소 제거
##pop 쓰면 지워지는 원소 한번 프린트해주고 제거

a = [1,2,3,4]
>>> a.pop()
4
>>> a
[1, 2, 3]
=================================================
##pop이용 제거 2번
##pop 쓰면 지워지는 원소 한번 프린트해주고 제거

[1, 2, 3]
>>> a.pop(0)
1
>>> a
[2, 3]

==================================================
##index 이용 어디위치에 있는지 알고싶을때

a = [1,2,3,4]
>>>>a.index(1)
0

==========================================
##리스트에서 원하는 값이 총 몇개있는지 알수있는 것
##count 사용

a = [1,100,2,100,3,100]
>>> a.count(100)
3
>>> a.count(200)##없으니까 0개나옴
0

====================================================
##sort이용해서 정렬 ->오름차순으로 나옴
##a.sort(reverse = True) -> 내림차순

##오름차순
a.sort()
>>> a
[1, 2, 3, 4, 5]
##내림차순
a.sort(reverse = True)
>>> a
[5, 4, 3, 2, 1]

===================================================
##원래순서를 거꾸로 되게 하는것
##reverse 는 무조건 거꾸로고  sort(reverse = True) 는 정렬하고 내림차순으로 

a.reverse()
>>> a
[1, 2, 3, 4, 5]

===================================================
##연습문제

>>> won  = []
>>> won.append(5)
>>> won
[5]
>>> won.extend([1,2])
>>> won
[5, 1, 2]
>>> a.insert(3,7)
>>> won.insert(3,7)
>>> won
[5, 1, 2, 7]
>>> won.remove(2)
>>> won
[5, 1, 7]
>>> won.pop()
7
>>> won
[5, 1]
>>> won.index(1)
1
>>> won.sort()
>>> won
[1, 5]
>>> won.sort(reverse = True)
>>> won
[5, 1]
====================================================
##다차원 행렬 구현

>>> aa = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]
>>> aa
[[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]]
>>> aa[0][0]
1
>>> aa[1][1]
6
=============================================
##리스트는 값을 변경할수 있지만 튜플은 변경할수 없다.
##중요한 데이터가 변경되면 안되기때문에 이용
##튜플은 대괄호 안됨, 소괄호() 써야함

>>> a = (1,2,3,4)
>>> a
(1, 2, 3, 4)
>>> type(a)
<class 'tuple'>

===================================================
##튜플 이용,답을 튜플형태로 되돌려줌

a = (1,2,3,4,5,6)
>>> a[:3]
(1, 2, 3)
>>> a[4:6]
(5, 6)

===================================================
##딕셔너리 - > 리스트하고 비슷,시험안봄 리스트하고 튜플까지만
##딕셔너리는 중괄호 씀{}

>>> dic = {}
>>> dic['파이썬'] = 'www.'
>>> dic
{'파이썬': 'www.'}
>>> dic.values()
dict_values(['www.'])
>>> dic.keys()
dict_keys(['파이썬'])

=================================

